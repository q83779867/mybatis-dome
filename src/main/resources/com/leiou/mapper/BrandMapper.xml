<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
namespace:名称空间
-->
<mapper namespace="com.leiou.mapper.BrandMapper">
        <!-- 其他配置 -->
        <resultMap id="brandResultMap" type="com.leiou.pojo.Brand">
            <id column="id" property="id" />
            <result column="company_name" property="companyName" />
            <result column="brand_name" property="brandName" />
        </resultMap>



    <select id="selectAll" resultMap="brandResultMap">
    select * from brand;
</select>
    <!--<select id="selectAll" resultType="com.leiou.pojo.Brand">
        select id, brand_name as brandName, company_name as companyName, ordered, description,status
        from brand;
    </select>-->
    <select id="selectById" resultMap="brandResultMap">
        select * from brand where id = #{id};
    </select>

    <!--<select id="selectByCondition" resultType="com.leiou.pojo.Brand">
    select *
    from brand
    where status and company_name and brand_name;
</select>
-->
<!--条件查询-->
  <!--  <select id="selectByCondition" resultMap="brandResultMap">
        select * from brand where status = #{status}
                              and company_name like #{companyName}
                              and brand_name like #{brandName}
    </select>
-->
    <select id="selectZhengjia" resultMap="brandResultMap">
       insert into mybatis.brand(id, brand_name, company_name, ordered, description, status)
       values (#{id},#{brandName},#{companyName},#{ordered},#{description},#{status});
    </select>
    <select id="selectShanchu" resultMap="brandResultMap">
        delete
        from mybatis.brand
        where id=#{id};
    </select>
    <select id="selectGai" resultType="java.lang.String">
        update mybatis.brand set brand_name=#{brandName},company_name=#{companyName},ordered=#{ordered},
                                 description=#{description},status=#{status} where id=#{id}
    </select>
<!--
 动态条件查询    if 条件判断   test 逻辑表达式
  1=1 恒等式   <where> 替换where 关键字
-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select * from brand     /*  where 1=1*/
      <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="companyName != null and companyName != '' ">
                and company_name like #{companyName}
            </if>
            <if test="brandName != null and brandName != '' ">
                and brand_name like #{brandName}
            </if>
      </where>
    </select>
   <!-- <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from brand
        where
        <choose>
            <when test="status != null">
                status = #{status}
            </when>
            <when test="companyName != null and companyName != ''">
                company_name like #{companyName}
            </when>
            <when test="brandName != null and brandName != ''">
                brand_name like #{brandName}
            </when>
            <otherwise>
                1=1
            </otherwise>
        </choose>    
    </select>-->
    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select * from brand
       <where>
        <choose>
            <when test="status != null">
                status = #{status}
            </when>
            <when test="companyName != null and companyName != ''">
                company_name like #{companyName}
            </when>
            <when test="brandName != null and brandName != ''">
                brand_name like #{brandName}
            </when>
            <otherwise>
                1=1
            </otherwise>

        </choose>
       </where>
    </select>

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into brand (brand_name, company_name, ordered, description, status)
        values (#{brandName},#{companyName},#{ordered},#{description},#{status});
    </insert>

    <!-- 返回主键的id，提供给前端，将前端的id由默认值0改成数据库中对应的id -->


    <insert id="add1">
        insert into brand (brand_name, company_name, ordered, description, status)
        values (#{brandName},#{companyName},#{ordered},#{description},#{status});
    </insert>


    <update id="update">
        update brand
        <set>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
            <if test="ordered != null">
                ordered = #{ordered},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="status != null">
                status = #{status}
            </if>
        </set>
        where id = #{id};

    </update>

    <delete id="deleteById">
        delete
        from brand
        where id = #{id};
    </delete>
<!--mybatis会将数组参数 封装一个mapo集合  默认 array = 数组   使用@Param注解改变map集合默认key的名称-->
    <delete id="deleteByIds">
        delete
        from brand
        where id
                  in(
    <foreach collection="array" item="id" separator=",">
        #{id}
    </foreach>
                  );
    </delete>

</mapper>


